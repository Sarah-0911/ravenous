{"ast":null,"code":"import config from './config';\nconst yelpApiUrl = 'https://api.yelp.com/v3/businesses/search?';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${config.apiKey}`\n  }\n};\nconst createSearchURL = (term, location, sortBy) => {\n  return `https://cors-anywhere.herokuapp.com/${yelpApiUrl}term=${term}&location=${location}&sort_by=${sortBy}`;\n};\nconst searchYelp = async (term, location, sortBy) => {\n  const searchURL = createSearchURL(term, location, sortBy);\n  try {\n    const response = await fetch(searchURL, options);\n    const data = await response.json();\n    const businessesResult = data.businesses.map(business => {\n      return {\n        imageSrc: business.image_url,\n        name: business.name,\n        address: `${business.location.address1}\n          ${business.location.address2} ${business.location.address3}`,\n        city: business.city,\n        state: business.state,\n        zipCode: business.zip_code,\n        category: business.categories.map(category => category.title.join(', ')),\n        rating: business.rating,\n        reviewCount: business.review_count\n      };\n    });\n    console.log(Result);\n    return Result;\n  } catch (err) {\n    return console.error(err);\n  }\n};\nexport default searchYelp;","map":{"version":3,"names":["config","yelpApiUrl","options","method","headers","accept","Authorization","apiKey","createSearchURL","term","location","sortBy","searchYelp","searchURL","response","fetch","data","json","businessesResult","businesses","map","business","imageSrc","image_url","name","address","address1","address2","address3","city","state","zipCode","zip_code","category","categories","title","join","rating","reviewCount","review_count","console","log","Result","err","error"],"sources":["/home/sarah/code/Sarah-0911/Codecademy/ravenous/src/utils/yelpApi.js"],"sourcesContent":["import config from './config';\n\nconst yelpApiUrl = 'https://api.yelp.com/v3/businesses/search?';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${config.apiKey}`\n  }\n};\n\nconst createSearchURL = (term, location, sortBy) => {\n  return `https://cors-anywhere.herokuapp.com/${yelpApiUrl}term=${term}&location=${location}&sort_by=${sortBy}`;\n};\n\nconst searchYelp = async (term, location, sortBy) => {\n  const searchURL = createSearchURL(term, location, sortBy);\n\n  try {\n    const response = await fetch(searchURL, options);\n    const data = await response.json();\n    const businessesResult = data.businesses.map(business => {\n      return {\n        imageSrc: business.image_url,\n        name: business.name,\n        address: `${business.location.address1}\n          ${business.location.address2} ${business.location.address3}`,\n        city: business.city,\n        state: business.state,\n        zipCode: business.zip_code,\n        category: business.categories.map(category => (category.title).join(', ')),\n        rating: business.rating,\n        reviewCount: business.review_count\n      };\n    });\n    console.log(Result);\n    return Result;\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nexport default searchYelp;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,UAAU;AAE7B,MAAMC,UAAU,GAAG,4CAA4C;AAE/D,MAAMC,OAAO,GAAG;EACdC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;IACPC,MAAM,EAAE,kBAAkB;IAC1BC,aAAa,EAAG,UAASN,MAAM,CAACO,MAAO;EACzC;AACF,CAAC;AAED,MAAMC,eAAe,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,KAAK;EAClD,OAAQ,uCAAsCV,UAAW,QAAOQ,IAAK,aAAYC,QAAS,YAAWC,MAAO,EAAC;AAC/G,CAAC;AAED,MAAMC,UAAU,GAAG,MAAAA,CAAOH,IAAI,EAAEC,QAAQ,EAAEC,MAAM,KAAK;EACnD,MAAME,SAAS,GAAGL,eAAe,CAACC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,CAAC;EAEzD,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,SAAS,EAAEX,OAAO,CAAC;IAChD,MAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,MAAMC,gBAAgB,GAAGF,IAAI,CAACG,UAAU,CAACC,GAAG,CAACC,QAAQ,IAAI;MACvD,OAAO;QACLC,QAAQ,EAAED,QAAQ,CAACE,SAAS;QAC5BC,IAAI,EAAEH,QAAQ,CAACG,IAAI;QACnBC,OAAO,EAAG,GAAEJ,QAAQ,CAACX,QAAQ,CAACgB,QAAS;AAC/C,YAAYL,QAAQ,CAACX,QAAQ,CAACiB,QAAS,IAAGN,QAAQ,CAACX,QAAQ,CAACkB,QAAS,EAAC;QAC9DC,IAAI,EAAER,QAAQ,CAACQ,IAAI;QACnBC,KAAK,EAAET,QAAQ,CAACS,KAAK;QACrBC,OAAO,EAAEV,QAAQ,CAACW,QAAQ;QAC1BC,QAAQ,EAAEZ,QAAQ,CAACa,UAAU,CAACd,GAAG,CAACa,QAAQ,IAAKA,QAAQ,CAACE,KAAK,CAAEC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1EC,MAAM,EAAEhB,QAAQ,CAACgB,MAAM;QACvBC,WAAW,EAAEjB,QAAQ,CAACkB;MACxB,CAAC;IACH,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;IACnB,OAAOA,MAAM;EACf,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,OAAOH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;EAC3B;AACF,CAAC;AAED,eAAe/B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}