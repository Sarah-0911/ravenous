{"ast":null,"code":"import config from './config';\nconst yelpApiUrl = 'https://api.yelp.com/v3/businesses/search?';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${config.apiKey}`\n  }\n};\nconst createSearchURL = (term, location, sortBy) => {\n  return `https://cors-anywhere.herokuapp.com/${yelpApiUrl}term=${term}&location=${location}&sort_by=${sortBy}`;\n};\nconst searchYelp = async (term, location, sortBy) => {\n  const searchURL = createSearchURL(term, location, sortBy);\n  try {\n    const response = await fetch(searchURL, options);\n    const data = await response.json();\n    console.log(data);\n    const businessesResult = data.businesses.map(business => {\n      return {\n        id: business.id,\n        imageSrc: business.image_url,\n        name: business.name,\n        address: business.location.address1,\n        city: business.location.city,\n        state: business.location.state,\n        zipCode: business.location.zip_code,\n        category: business.categories.map(category => category.title).join(', '),\n        rating: business.rating,\n        reviewCount: business.review_count,\n        url: business.url\n      };\n    });\n    // console.log(businessesResult[1].url);\n    return businessesResult;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport default searchYelp;","map":{"version":3,"names":["config","yelpApiUrl","options","method","headers","accept","Authorization","apiKey","createSearchURL","term","location","sortBy","searchYelp","searchURL","response","fetch","data","json","console","log","businessesResult","businesses","map","business","id","imageSrc","image_url","name","address","address1","city","state","zipCode","zip_code","category","categories","title","join","rating","reviewCount","review_count","url","error"],"sources":["/home/sarah/code/Sarah-0911/Codecademy/ravenous/src/utils/yelpApi.js"],"sourcesContent":["import config from './config';\n\nconst yelpApiUrl = 'https://api.yelp.com/v3/businesses/search?';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${config.apiKey}`\n  }\n};\n\nconst createSearchURL = (term, location, sortBy) => {\n  return `https://cors-anywhere.herokuapp.com/${yelpApiUrl}term=${term}&location=${location}&sort_by=${sortBy}`;\n};\n\nconst searchYelp = async (term, location, sortBy) => {\n  const searchURL = createSearchURL(term, location, sortBy);\n  try {\n    const response = await fetch(searchURL, options);\n    const data = await response.json();\n    console.log(data);\n    const businessesResult = data.businesses.map(business => {\n      return {\n        id: business.id,\n        imageSrc: business.image_url,\n        name: business.name,\n        address: business.location.address1,\n        city: business.location.city,\n        state: business.location.state,\n        zipCode: business.location.zip_code,\n        category: business.categories.map(category => category.title).join(', '),\n        rating: business.rating,\n        reviewCount: business.review_count,\n        url: business.url\n      };\n    });\n    // console.log(businessesResult[1].url);\n    return businessesResult;\n  } catch (error) {\n      console.error(error);\n  }\n}\n\nexport default searchYelp;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,UAAU;AAE7B,MAAMC,UAAU,GAAG,4CAA4C;AAE/D,MAAMC,OAAO,GAAG;EACdC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;IACPC,MAAM,EAAE,kBAAkB;IAC1BC,aAAa,EAAG,UAASN,MAAM,CAACO,MAAO;EACzC;AACF,CAAC;AAED,MAAMC,eAAe,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,KAAK;EAClD,OAAQ,uCAAsCV,UAAW,QAAOQ,IAAK,aAAYC,QAAS,YAAWC,MAAO,EAAC;AAC/G,CAAC;AAED,MAAMC,UAAU,GAAG,MAAAA,CAAOH,IAAI,EAAEC,QAAQ,EAAEC,MAAM,KAAK;EACnD,MAAME,SAAS,GAAGL,eAAe,CAACC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,CAAC;EACzD,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,SAAS,EAAEX,OAAO,CAAC;IAChD,MAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,MAAMI,gBAAgB,GAAGJ,IAAI,CAACK,UAAU,CAACC,GAAG,CAACC,QAAQ,IAAI;MACvD,OAAO;QACLC,EAAE,EAAED,QAAQ,CAACC,EAAE;QACfC,QAAQ,EAAEF,QAAQ,CAACG,SAAS;QAC5BC,IAAI,EAAEJ,QAAQ,CAACI,IAAI;QACnBC,OAAO,EAAEL,QAAQ,CAACb,QAAQ,CAACmB,QAAQ;QACnCC,IAAI,EAAEP,QAAQ,CAACb,QAAQ,CAACoB,IAAI;QAC5BC,KAAK,EAAER,QAAQ,CAACb,QAAQ,CAACqB,KAAK;QAC9BC,OAAO,EAAET,QAAQ,CAACb,QAAQ,CAACuB,QAAQ;QACnCC,QAAQ,EAAEX,QAAQ,CAACY,UAAU,CAACb,GAAG,CAACY,QAAQ,IAAIA,QAAQ,CAACE,KAAK,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;QACxEC,MAAM,EAAEf,QAAQ,CAACe,MAAM;QACvBC,WAAW,EAAEhB,QAAQ,CAACiB,YAAY;QAClCC,GAAG,EAAElB,QAAQ,CAACkB;MAChB,CAAC;IACH,CAAC,CAAC;IACF;IACA,OAAOrB,gBAAgB;EACzB,CAAC,CAAC,OAAOsB,KAAK,EAAE;IACZxB,OAAO,CAACwB,KAAK,CAACA,KAAK,CAAC;EACxB;AACF,CAAC;AAED,eAAe9B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}